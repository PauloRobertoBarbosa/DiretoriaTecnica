# import os
# import pandas as pd
# import cx_Oracle
#
# dsn_tns = cx_Oracle.makedsn(r'ORAODSTB578B.azul.corp', '1521', service_name='TRAX_ODS')
# conn = cx_Oracle.connect(user=r'userselect', password=r'userselect', dsn=dsn_tns)
#
# # os.chdir(r'C:\Users\paulo.roberto\Documents\Arquivos TXT')
#
# picklist = conn.cursor()
# requisition = conn.cursor()
# # c.execute("select * from odb.pn_master where pn = 'NAS7203A11'") # use triple quotes if you want to spread your query across multiple lines
# # for row in c:
# #     print(row)
# #     # print(row[0:])
# #     # print (row[0], '-', row[1]) # this only shows the first two columns. To add an additional column you'll need to add , '-', row[2], etc.
# # conn.close()
# picklist.execute(
#     """SELECT DISTINCT PICKLIST_HEADER.TASK_CARD,
#   WO_TASK_CARD.TASK_CARD_DESCRIPTION,
#   PICKLIST_HEADER.WO,
#   WO_TASK_CARD.CHAPTER,
#   (SELECT DESCRIPTION FROM ODB.ATA_CHAPTER_SECTION_PARAGRAPH
#      WHERE ATA_CHAPTER_SECTION_PARAGRAPH.CHAPTER = WO_TASK_CARD.CHAPTER
#      AND ATA_CATEGORY = 'CHAPTER') AS ATA_DESCRIPTION ,
#   PICKLIST_DISTRIBUTION.PN,
#   PN_MASTER.PN_DESCRIPTION,
# PN_MASTER.STOCK_UOM UOM_PN_MASTER,
# PN_MASTER .CATEGORY,
#   PICKLIST_HEADER.PICKLIST,
#   PICKLIST_DISTRIBUTION.PICKLIST_LINE,
#   PICKLIST_HEADER.PRIORITY,
#   PICKLIST_HEADER.CREATED_DATE,
#   PICKLIST_DISTRIBUTION.QTY,
#   PICKLIST_HEADER.ORIGINAL_LOCATION,
#   PICKLIST_HEADER.LOCATION,
#   PICKLIST_HEADER.AC,
#   PICKLIST_HEADER.STATUS,
#   CAST ( NOTE_PAD.NOTES_TEXT AS VARCHAR2 ( 100 ) ) NOTES_TEXT,
#   CASE WHEN (PICKLIST_HEADER.STATUS='OPEN' AND
#              PICKLIST_HEADER.LOCATION IN ('PLU-P1-H3','PLU-P2-H3','PLU-P3-H20','PLU-P4-H20','PLU-P5-H19'))
#   THEN 'DISPONIVEL'
#   ELSE
#     CASE WHEN (PICKLIST_HEADER.STATUS='OPEN' AND
#                PICKLIST_HEADER.LOCATION IN ('VCP','PLU','SSA','REC','SDU','CNF','POA','CGB'))
#     THEN 'PENDENTE ALMOX'
#     ELSE
#       CASE WHEN (PICKLIST_HEADER.STATUS='CLOSED' AND
#                  PICKLIST_HEADER.LOCATION IN ('PLU','PLU-P1-H3','PLU-P2-H3','PLU-P3-H20','PLU-P4-H20','PLU-P5-H19'))
#       THEN 'ATENDIDO'
#       ELSE
#         CASE WHEN PICKLIST_HEADER.STATUS='TRANSFER'
#         THEN 'TRANSFERENCIA'
#         ELSE
#           CASE WHEN PICKLIST_HEADER.STATUS='CANCEL'
#           THEN 'CANCELADO'
#           ELSE '-'
#           END
#         END
#       END
#     END
#   END SITUACAO,
#
# '' AS REQUISITION,
# '' AS REQUISITION_DESCRIPTION,
# '' AS AUTHORIZATION,
# '' AS ASSIGN_TO,
# '' AS REQUISITION_TYPE,
# '' AS QTY_REQUIRE,
# '' AS REQUIRE_DATE,
# '' AS CRIACAO_RQ,
# '' AS STATUS,
# '' AS SUM_QTY_AVAILABLE,
# '' AS ORDER_NUMBER,
# '' AS PO_ORACLE,
# '' AS DATA_ENTREGA_PO,
# '' AS REQ_LINE_STATUS,
# 'PICKLIST' AS ORIGEM
#
# FROM --ODB.ATA_CHAPTER_SECTION_PARAGRAPH ATA_CHAPTER_SECTION_PARAGRAPH,
#   ODB.PICKLIST_DISTRIBUTION PICKLIST_DISTRIBUTION,
#   ODB.PICKLIST_HEADER PICKLIST_HEADER,
#   ODB.PN_MASTER PN_MASTER,
#   ODB.PN_INTERCHANGEABLE,
#   ODB.WO_TASK_CARD WO_TASK_CARD,
#   ODB.NOTE_PAD
# WHERE 1=1
# AND PICKLIST_HEADER.WO = WO_TASK_CARD.WO (+)
# AND PICKLIST_HEADER.TASK_CARD = WO_TASK_CARD.TASK_CARD (+)
# AND PICKLIST_HEADER.PICKLIST = PICKLIST_DISTRIBUTION.PICKLIST (+)
# AND PN_MASTER.PN (+) = PN_INTERCHANGEABLE.PN
# AND PICKLIST_DISTRIBUTION.PN = PN_INTERCHANGEABLE.PN_INTERCHANGEABLE (+)
# AND PICKLIST_HEADER.CREATED_DATE>=SYSDATE-250
# AND PICKLIST_HEADER.AC LIKE 'PR-TKM'
# AND PICKLIST_HEADER.PRIORITY IN ('CHECK','PLAN','WSP')
# AND PICKLIST_DISTRIBUTION.TRANSACTION = 'REQUIRE'
# AND NOTE_PAD.NOTES  ( + ) = PICKLIST_HEADER.NOTES"""
# )
#
# dfpicklist = pd.DataFrame(picklist, columns = ['TASK_CARD', 'TASK_CARD_DESCRIPTION', 'WO', 'CHAPTER', 'ATA_DESCRIPTION', 'PN', 'PN_DESCRIPTION', 'UOM_PN_MASTER', 'CATEGORY', 'PICKLIST',' PICKLIST_LINE', 'PRIORITY', 'CREATED_DATE', 'QTY', 'ORIGINAL_LOCATION', 'LOCATION', 'AC', 'STATUS', 'NOTES_TEXT', 'SITUACAO', 'REQUISITION', 'REQUISITION_DESCRIPTION', 'AUTHORIZATION', 'ASSIGN_TO', 'REQUISITION_TYPE', 'QTY_REQUIRE', 'REQUIRE_DATE', 'CRIACAO_RQ', 'STATUS_1', 'SUM_QTY_AVAILABLE', 'ORDER_NUMBER', 'PO_ORACLE', 'DATA_ENTREGA_PO', 'REQ_LINE_STATUS', 'ORIGEM'])
#
# requisition.execute("""
# SELECT DISTINCT
# REQUISITION_HEADER.TASK_CARD,
# WO_TASK_CARD.TASK_CARD_DESCRIPTION,
# REQUISITION_HEADER.WO,
# '' AS CHAPTER,
# '' AS ATA_DESCRIPTION,
# REQUISITION_DETAIL.PN,
# REQUISITION_DETAIL.PN_DESCRIPTION,
# '' AS UOM_PN_MASTER,
# '' AS CATEGORY,
# '' AS PICKLIST,
# '' AS PICKLIST_LINE,
# REQUISITION_HEADER.PRIORITY,
# '' AS CREATED_DATE,
# '' AS QTY,
# '' AS ORIGINAL_LOCATION,
# REQUISITION_DETAIL.LOCATION,
# REQUISITION_HEADER.AC,
# '' AS STATUS,
# '' AS NOTES_TEXT,
# '' AS SITUACAO,
# REQUISITION_HEADER.REQUISITION,
# REQUISITION_HEADER.REQUISITION_DESCRIPTION,
# REQUISITION_HEADER.AUTHORIZATION,
# REQUISITION_DETAIL.ASSIGN_TO,
# CASE WHEN (REQUISITION_HEADER.REQUISTION_TYPE='RMAN')
# THEN 'REPAROS E GARANTIAS'
# ELSE
#   CASE WHEN (REQUISITION_HEADER.REQUISTION_TYPE='PO')
#   THEN 'PO COMPRAS'
#   ELSE REQUISITION_HEADER.REQUISTION_TYPE
#   END
# END REQUISITION_TYPE,
# REQUISITION_DETAIL.QTY_REQUIRE,
# REQUISITION_DETAIL.REQUIRE_DATE,
# REQUISITION_DETAIL.CREATED_DATE CRIACAO_RQ,
# REQUISITION_DETAIL.STATUS,
# (SELECT NVL(SUM ( PID.QTY_AVAILABLE ),0) SOMA
# FROM ODB.PN_INVENTORY_DETAIL PID,
# ODB.PN_INTERCHANGEABLE PIA,
# ODB.PN_INTERCHANGEABLE PIB,
# ODB.PN_MASTER PM
# WHERE PID.PN = PIA.PN_INTERCHANGEABLE
# AND PIA.PN = PM.PN
# AND PM.PN = PIB.PN
# AND PIB.PN_INTERCHANGEABLE = REQUISITION_DETAIL.PN) SUM_QTY_AVAILABLE,
# ORDER_DETAIL.ORDER_NUMBER,
# ORDER_HEADER.LEGACY_SYSTEM_ORDER_NUMBER PO_ORACLE,
# ORDER_DETAIL.DELIVERY_DATE DATA_ENTREGA_PO,
# CASE WHEN (REQUISITION_DETAIL.STATUS='ORDER')
# THEN 'COMPRA EM ANDAMENTO'
# ELSE
#   CASE WHEN (REQUISITION_DETAIL.STATUS='OPEN')
#   THEN 'PENDENTE COMPRAS'
#   ELSE
#     CASE WHEN (REQUISITION_DETAIL.STATUS='CLOSED')
#     THEN 'RECEBIDO ALMOX'
#     ELSE
#       CASE WHEN (REQUISITION_DETAIL.STATUS='CANCEL')
#       THEN 'CANCELADO'
#       ELSE '-'
#       END
#     END
#   END
# END REQ_LINE_STATUS,
# 'REQUISITION' AS ORIGEM
#
# FROM ODB.REQUISITION_DETAIL REQUISITION_DETAIL,
# ODB.REQUISITION_HEADER REQUISITION_HEADER,
# ODB.WO_TASK_CARD WO_TASK_CARD,
# # ODB.ORDER_HEADER ORDER_HEADER,
# # ODB.ORDER_DETAIL ORDER_DETAIL
# # WHERE 1=1
# # AND ( REQUISITION_HEADER.REQUISITION = REQUISITION_DETAIL.REQUISITION )
# # AND ( REQUISITION_HEADER.TASK_CARD = WO_TASK_CARD.TASK_CARD ( + ) )
# # AND ( REQUISITION_HEADER.WO = WO_TASK_CARD.WO ( + ) )
# # AND ( REQUISITION_HEADER.CREATED_DATE >= SYSDATE-90 )
# # AND ( REQUISITION_DETAIL.LOCATION IN ('PLU','VCP') )
# # AND ( ORDER_DETAIL.ORDER_NUMBER = ORDER_HEADER.ORDER_NUMBER(+) )
# # AND ( REQUISITION_DETAIL.PN = ORDER_DETAIL.PN(+) )
# # AND ( REQUISITION_DETAIL.REQUISITION = ORDER_DETAIL.REQUISITION(+) )
# # AND ( REQUISITION_DETAIL.REQUISITION_LINE = ORDER_DETAIL.REQUISITION_LINE(+) )
# # AND ( REQUISITION_HEADER.PRIORITY IN ('CHECK','PLAN','WSP') )
# # AND ( REQUISITION_HEADER.AC LIKE 'PR-TKM')""")
# #
# # dfrequisition = pd.DataFrame(requisition, columns = ['TASK_CARD', 'TASK_CARD_DESCRIPTION', 'WO', 'CHAPTER', 'ATA_DESCRIPTION', 'PN', 'PN_DESCRIPTION', 'UOM_PN_MASTER', 'CATEGORY', 'PICKLIST',' PICKLIST_LINE', 'PRIORITY', 'CREATED_DATE', 'QTY', 'ORIGINAL_LOCATION', 'LOCATION', 'AC', 'STATUS', 'NOTES_TEXT', 'SITUACAO', 'REQUISITION', 'REQUISITION_DESCRIPTION', 'AUTHORIZATION', 'ASSIGN_TO', 'REQUISITION_TYPE', 'QTY_REQUIRE', 'REQUIRE_DATE', 'CRIACAO_RQ', 'STATUS_1', 'SUM_QTY_AVAILABLE', 'ORDER_NUMBER', 'PO_ORACLE', 'DATA_ENTREGA_PO', 'REQ_LINE_STATUS', 'ORIGEM'])
# #
# # dfrequire = dfpicklist.append(dfrequisition)
# #
# # for row in dfrequire:
# #     excel = pd.ExcelWriter(r'C:\Users\paulo.roberto\Documents\ResumoCASK\CheckRequire.xlsx',engine='xlsxwriter')
# #     dfrequire.to_excel(excel, sheet_name='Require')
# #     excel.save()
# #
# # conn.close()
#
#
# import pandas as pd
# import cx_Oracle
# dsn_tns = cx_Oracle.makedsn(r'ORAODSTB578B.azul.corp', '1521', service_name='TRAX_ODS')
# conn = cx_Oracle.connect(user=r'userselect', password=r'userselect', dsn=dsn_tns)
# fh = conn.cursor()
# fh.execute("""SELECT
# '01'||'/'||TO_CHAR(FLIGHT_DATE, 'MM')||'/'||TO_CHAR(FLIGHT_DATE, 'YYYY') MES,
# CASE
# WHEN AM.AC_TYPE = 'PILATUS-12' THEN 'PILATUS'
# WHEN AM.AC_TYPE = 'ATR72' THEN 'ATR'  ELSE AM.AC_TYPE END AC_TYPE,
# ((SUM(AF.FLIGHT_HOURS)*60)+SUM(AF.FLIGHT_MINUTES))/60 FH
# FROM ODB.AC_ACTUAL_FLIGHTS AF INNER JOIN ODB.AC_MASTER AM ON AF.AC = AM.AC
# WHERE AF.FLIGHT_DATE>='01-JAN-2020' AND AF.FLIGHT_DATE<='31-JAN-2020'
# GROUP BY '01'||'/'||TO_CHAR(FLIGHT_DATE, 'MM')||'/'||TO_CHAR(FLIGHT_DATE, 'YYYY'), AM.AC_TYPE """)
# dffh = pd.DataFrame(fh, columns=['MES', 'FLEET', 'FH'])
# print(dffh)



import pandas as pd
import os
os.chdir(r'C:\Users\paulo.roberto\Documents\Movto Estoque Consolidado')
import cx_Oracle
dsn_tns = cx_Oracle.makedsn(r'ORAODSTB578B.azul.corp', '1521', service_name='TRAX_ODS')
conn = cx_Oracle.connect(user=r'userselect', password=r'userselect', dsn=dsn_tns)
fh = conn.cursor()
fh.execute("""SELECT WO.WO, WO.WO_DESCRIPTION, WO.WO_CATEGORY, WO.LOCATION, WO.SITE, WO.EXPENDITURE FROM ODB.WO""")
dffh = pd.DataFrame(fh, columns=['MES', 'FLEET', 'FH'])
print(dffh)